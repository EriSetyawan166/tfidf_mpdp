/*



 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */



package tfidf_mpdp;

import javax.swing.*;
import java.util.Collections;   
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.awt.event.*;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.*;
// import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author Eri
 */

public class Tfidf_mpdp extends javax.swing.JFrame {
    List<String> teks = new ArrayList<>();
    String driver, database, user, pass, userLogin;
    /**
     * Creates new form Tfidf_mpdp
     */
    public Tfidf_mpdp() {
        initComponents();
        driver = "com.mysql.jdbc.Driver";
        database = "jdbc:mysql://localhost/tfidf";
        user = "root";
        pass = "";
        setDefaultTable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        browseBtn = new javax.swing.JButton();
        simpanBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableTxt = new javax.swing.JTable();
        hitungBtn = new javax.swing.JButton();
        totalKalimatTxtField = new javax.swing.JTextField();
        totalkata = new javax.swing.JTextField();
        totalKataTxtField = new javax.swing.JTextField();
        totalkalimat = new javax.swing.JTextField();
        minimumThresholdTextField = new javax.swing.JTextField();
        minimumThresholdTxtField = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        hasiljTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        browseBtn.setText("browse");
        browseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseBtnActionPerformed(evt);
            }
        });

        simpanBtn.setText("simpan");
        simpanBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanBtnActionPerformed(evt);
            }
        });

        tableTxt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "nomor", "teks"
            }
        ));
        jScrollPane1.setViewportView(tableTxt);
        if (tableTxt.getColumnModel().getColumnCount() > 0) {
            tableTxt.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        hitungBtn.setText("Hitung");
        hitungBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hitungBtnActionPerformed(evt);
            }
        });

        totalKalimatTxtField.setEditable(false);

        totalkata.setEditable(false);
        totalkata.setText("Total Kata = ");
        totalkata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalkataActionPerformed(evt);
            }
        });

        totalKataTxtField.setEditable(false);

        totalkalimat.setEditable(false);
        totalkalimat.setText("Total Kalimat = ");
        totalkalimat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalkalimatActionPerformed(evt);
            }
        });

        minimumThresholdTextField.setEditable(false);
        minimumThresholdTextField.setText("Minimum Threshold = ");
        minimumThresholdTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minimumThresholdTextFieldActionPerformed(evt);
            }
        });

        minimumThresholdTxtField.setEditable(false);

        hasiljTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "no", "kalimat", "weight"
            }
        ));
        jScrollPane3.setViewportView(hasiljTable1);
        if (hasiljTable1.getColumnModel().getColumnCount() > 0) {
            hasiljTable1.getColumnModel().getColumn(0).setMaxWidth(30);
            hasiljTable1.getColumnModel().getColumn(2).setMaxWidth(200);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(169, 169, 169)
                .addComponent(browseBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(simpanBtn)
                .addGap(173, 173, 173))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(minimumThresholdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(minimumThresholdTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(totalkata, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(totalkalimat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(100, 100, 100)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(totalKalimatTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(totalKataTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(60, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 545, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addGap(56, 56, 56))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(hitungBtn)
                .addGap(273, 273, 273))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(browseBtn)
                    .addComponent(simpanBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(hitungBtn)
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalkalimat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalKalimatTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalkata, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalKataTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(minimumThresholdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minimumThresholdTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(320, Short.MAX_VALUE))
        );

        jScrollPane2.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 673, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void minimumThresholdTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minimumThresholdTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_minimumThresholdTextFieldActionPerformed

    private void totalkalimatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalkalimatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalkalimatActionPerformed

    private void totalkataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalkataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalkataActionPerformed

    //fungsi untuk mengisi table dengan teks dari database
    public void setDefaultTable(){
        try {
            // Load the database driver
            Class.forName(driver);

            // Establish a connection to the database
            Connection connection = DriverManager.getConnection(
                database, user, pass);
            
            Statement statement = connection.createStatement();

            

            // Construct the INSERT query
            ResultSet rs = statement.executeQuery("SELECT teks FROM kalimat2");
            DefaultTableModel model = (DefaultTableModel) tableTxt.getModel();
            int i = 0;
            while (rs.next()) {
                String teks = rs.getString("teks");
                model.addRow(new Object[] {i+1, teks});
                i++;
            }
        }catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void hitungBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hitungBtnActionPerformed
        hitung hitung =new hitung();
        hitung.main(new String[] {});
        int totalKata = hitung.getTotalKata();
        int totalKalimat = hitung.getTotalKalimat();
        double minimumThreshold = hitung.getMinimumThreshold();
        totalKalimatTxtField.setText(String.valueOf(totalKalimat));
        totalKataTxtField.setText(String.valueOf(totalKata));
        minimumThresholdTxtField.setText(String.valueOf(minimumThreshold));
        ArrayList<String> texts = hitung.getTexts();
        ArrayList<Double> weights = hitung.getWeight();
        ArrayList<Integer> indices = hitung.getIndices();
        
        //mengurutkan data yang memiliki bobot tertinggi
        Collections.sort(indices, (i, j) -> -1 * weights.get(i).compareTo(weights.get(j)));
//        System.out.println("Urutan Kalimat dari yang memiliki weight terbesar ke terendah:");

//        String format3 = "\n%-4s%-80s%-4s%-15s";
//        for (int i = 0; i < weights.size(); i++){
//            System.out.printf(format3, String.format("%d.", i+1),texts.get(indices.get(i)), "W(s)", String.format("= %.4f", weights.get(indices.get(i))));
//        }
        
        //menampilkannya ke tabel
        DefaultTableModel model = (DefaultTableModel) hasiljTable1.getModel();
        for (int i = 0; i < texts.size(); i++) {
            model.addRow(new Object[] {i+1, texts.get(indices.get(i)), weights.get(indices.get(i))});
        }

        //        for (int text : indices) {
            //            System.out.println(text);
            //        }
        //

        //        System.out.println(data.get(1));
        //        System.out.println(minimumThreshold);
    }//GEN-LAST:event_hitungBtnActionPerformed

    private void simpanBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanBtnActionPerformed
        // TODO add your handling code here:
        //
        try {
            // Load the database driver
            Class.forName(driver);

            // Establish a connection to the database
            Connection connection = DriverManager.getConnection(
                database, user, pass);
            System.out.println("jalan");
            Statement statement = connection.createStatement();

            for (String text : teks) {

                // Construct the INSERT query
                String query = "INSERT INTO kalimat2 (teks) VALUES ('" + text + "')";

                // Execute the query
                statement.executeUpdate(query);
            }
            
            setDefaultTable();

        }catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_simpanBtnActionPerformed

    private void browseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseBtnActionPerformed

        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            try {
                FileReader fileReader = new FileReader(selectedFile.getAbsolutePath());
                BufferedReader bufferedReader = new BufferedReader(fileReader);
                String line = null;
                while((line = bufferedReader.readLine()) != null) {
                    teks.add(line);
                    System.out.println(line);
                }
                bufferedReader.close();
            }
            catch(IOException ex) {
                System.out.println("Error reading file '" + selectedFile.getAbsolutePath() + "'");
            }
        }
    }//GEN-LAST:event_browseBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
         
         
            
        
         
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tfidf_mpdp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tfidf_mpdp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tfidf_mpdp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tfidf_mpdp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tfidf_mpdp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseBtn;
    private javax.swing.JTable hasiljTable1;
    private javax.swing.JButton hitungBtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField minimumThresholdTextField;
    private javax.swing.JTextField minimumThresholdTxtField;
    private javax.swing.JButton simpanBtn;
    private javax.swing.JTable tableTxt;
    private javax.swing.JTextField totalKalimatTxtField;
    private javax.swing.JTextField totalKataTxtField;
    private javax.swing.JTextField totalkalimat;
    private javax.swing.JTextField totalkata;
    // End of variables declaration//GEN-END:variables
}
